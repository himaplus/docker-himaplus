# 並列
worker_processes auto;

# eventディレクティブ
events {
    worker_connections 1024; # 接続数
}

http {
    # upstreamディレクティブ
    upstream go-api-srv {
        # リバースプロキシとサーバー間の通信方法
        server go-api-srv:4561;  # コンテナ名とポートを指定

        # ソケット通信に代える？
        # # ソケット通信のためのpuma.sockを指定
        # server unix:/tmp/gunicorn.sock; # unix:///go-api-srv/tmp/sockets/puma.sock;
    }

    # serverディレクティブ
    server { # このコンテキストにはアクセスされたときの挙動や設定
        # リッスンするポート
        listen 80;
        # listen 443 ssl;
        # ホスト名を並べる
        server_name localhost unmacld.tayra-buri.ts.net;

        # 出力先
        access_log /var/log/nginx/access.log;
        error_log  /var/log/nginx/error.log;

        # リクエストボディ上限
        client_max_body_size 100m;

        # URIに対する設定
        location /api { # /apiから始まるURIを転送 /api
            # rewrite ^/api/(.*) /$1 break; # apiサーバーでは/{api_v}から始まるので除去
            proxy_pass http://go-api-srv; # apiサーバへ転送
            # クライアントのリクエストヘッダー情報をプロキシ先のバックエンドサーバーに渡す
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 3600; # プロキシ先からの応答に対するタイムアウト値
        }

                # URIに対する設定
        location /auth { # /apiから始まるURIを転送 /api
            # rewrite ^/api/(.*) /$1 break; # apiサーバーでは/{api_v}から始まるので除去
            proxy_pass http://pb-authn-srv; # apiサーバへ転送
            # クライアントのリクエストヘッダー情報をプロキシ先のバックエンドサーバーに渡す
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 3600; # プロキシ先からの応答に対するタイムアウト値
        }
    }
}